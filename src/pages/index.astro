---
import CursorLayaut from "../layouts/CursorLayout.astro";
import Canvas from "../components/Canvas.astro";
import Nav from "../components/Nav.astro";
import Home from "../components/Home.astro";
import Experience from "../components/Experience.astro";
import Projects from "../components/Projects.astro";
import Skills from "../components/skills.astro";
import Contact from "../components/Contact.astro";
import "../../public/global.css";
---

<html lang="en">
	<head>
		<meta charset="utf-8" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="viewport" content="width=device-width" />
		<meta name="generator" content={Astro.generator} />
		<title>Natalia Curia | Web Developer</title>
		<meta
			name="description"
			content="Portfolio Natalia Curria, desarrolladora web especializada en HTML, CSS, JavaScript."
		/>
		<meta
			name="keywords"
			content="portfolio, desarrollo web, front-end, HTML, CSS, JavaScript, maquetadora, Curia Natalia"
		/>
		<meta name="author" content="Natalia Curia" />
		<meta name="robots" content="index, follow" />
		<meta
			property="og:title"
			content="Portfolio Natalia Curia - Web Developer"
		/>
		<meta
			property="og:description"
			content="Portfolio Natalia Curia como desarrolladora web."
		/>
		<meta property="og:image" content="https://nataliacuria-dev.netlify.app/assets/NataliaCuria-WebDeveloper.png" />
		<!-- Imagen que se mostrará en las redes -->
		<meta property="og:url" content="https://nataliacuria-dev.netlify.app/" />
		<meta property="og:type" content="website" />

		<link rel="preconnect" href="https://fonts.googleapis.com" />
		<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
		<link href="https://fonts.googleapis.com/css2?family=Rajdhani:wght@300;400;500;600;700&display=swap" rel="stylesheet" />
		<link href="https://fonts.googleapis.com/css2?family=Roboto+Condensed:ital,wght@0,100..900;1,100..900&display=swap" rel="stylesheet"/>
		<link href="https://fonts.googleapis.com/css2?family=Montserrat:ital,wght@0,100..900;1,100..900&display=swap" rel="stylesheet">
		<link href="https://fonts.googleapis.com/css2?family=Squada+One&display=swap" rel="stylesheet" />
		<link
			rel="stylesheet"
			href="https://cdn-uicons.flaticon.com/2.6.0/uicons-brands/css/uicons-brands.css"
		/>
		<link
			href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css"
			rel="stylesheet"
			integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH"
			crossorigin="anonymous"
		/>
		<script
			src="https://kit.fontawesome.com/270cc5acdb.js"
			crossorigin="anonymous"></script>
	</head>
	<body>
		<CursorLayaut>
			<div class="pages">
				<div class="page">
					<a href="#home" aria-label="Home">Home</a>
					<a href="#experience" aria-label="Experiencia">Experiencia</a>
					<a href="#projects" aria-label="Proyectos">Proyectos</a>
					<a href="#contact" aria-label="Contacto">Contacto</a>
				</div>
				<div class="scroll">
					<span class="thumb"></span>
				</div>
			</div>
			<Canvas />
			<Nav />
			<main>
				<Home />
				<Experience />
				<Projects />
				<Skills />
				<Contact />
				<div></div>
			</main>
			<footer>
				<p class="animated-text">
					Hecho con <i class="fa-solid fa-heart"></i> | Natalia curia
				</p>
			</footer>
		</CursorLayaut>
	</body>
</html>

<script is:inline>
	window.addEventListener("load", function () {
		window.scrollTo(0, 0);
	});

	//________________________________________________

	//paralax
	document.addEventListener("scroll", function () {
		const parallax = document.querySelector("body");
		let scrollPosition = window.scrollY;
		parallax.style.backgroundPositionY = scrollPosition * 0.3 + "px";
	});

	//________________________________________________

	//pages navigation
	document.querySelectorAll(".page a").forEach((link) => {
		link.addEventListener("click", function (event) {
			const target = document.querySelector(this.getAttribute("href"));
			if (target) {
				const scroll = document.querySelector(".scroll");
				const thumb = document.querySelector(".thumb");
				const isMobile =
					window.matchMedia("(max-width: 600px)").matches;
				const scrollSize = isMobile
					? scroll.offsetWidth
					: scroll.offsetHeight;
				const index = Array.from(this.parentElement.children).indexOf(
					this,
				);
				const thumbSize = isMobile
					? thumb.offsetWidth
					: thumb.offsetHeight;
				const position =
					((scrollSize - thumbSize) * index) /
					(this.parentElement.children.length - 1);

				if (isMobile) {
					thumb.style.left = `${position}px`;
				} else {
					thumb.style.top = `${position}px`;
				}

				window.scrollTo({
					top: target.offsetTop,
					behavior: "smooth",
				});
			}
		});
	});

	const sections = document.querySelectorAll(".content");
	const options = {
		root: null,
		rootMargin: "0px",
		threshold: 0.3,
	};

	const observer = new IntersectionObserver((entries) => {
		entries.forEach((entry) => {
			if (entry.isIntersecting) {
				const id = entry.target.id;
				const link = document.querySelector(`.page a[href="#${id}"]`);
				const scroll = document.querySelector(".scroll");
				const thumb = document.querySelector(".thumb");
				const isMobile =
					window.matchMedia("(max-width: 600px)").matches;
				const scrollSize = isMobile
					? scroll.offsetWidth
					: scroll.offsetHeight;
				const index = Array.from(link.parentElement.children).indexOf(
					link,
				);
				const thumbSize = isMobile
					? thumb.offsetWidth
					: thumb.offsetHeight;
				const position =
					((scrollSize - thumbSize) * index) /
					(link.parentElement.children.length - 1);

				if (isMobile) {
					thumb.style.left = `${position}px`;
				} else {
					thumb.style.top = `${position}px`;
				}
			}
		});
	}, options);

	sections.forEach((section) => {
		observer.observe(section);
	});

	//________________________________________________

	//animaciones de las secciones.

	document.addEventListener("DOMContentLoaded", function () {
		const slides = document.querySelectorAll(".entry");
		let lastScrollPosition = 0;

		const observerOptions = {
			root: null,
			rootMargin: "0px",
			threshold: 0.3, // Activa cuando el 60% del elemento está visible
		};

		const observer = new IntersectionObserver((entries, observer) => {
			entries.forEach((entry) => {
				const currentScrollPosition = window.scrollY;
				const isScrollingDown =
					currentScrollPosition > lastScrollPosition;

				if (entry.isIntersecting && isScrollingDown) {
					entry.target.classList.add("appear");
					observer.unobserve(entry.target);
				}

				lastScrollPosition = currentScrollPosition;
			});
		}, observerOptions);

		slides.forEach((slide) => observer.observe(slide));
	});
</script>
