---
import CursorLayaut from "../layouts/CursorLayout.astro";
import Canvas from "../components/Canvas.astro";
import Nav from "../components/Nav.astro";
import Home from "../components/Home.astro";
import "../../public/global.css";
import Experience from "../components/Experience.astro";
import Projects from "../components/Projects.astro";
import icons from '../../src/data/icons.json';
---

<html lang="en">
	<head>
		<meta charset="utf-8" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="viewport" content="width=device-width" />
		<meta name="generator" content={Astro.generator} />
		<title>Natalia Curia | Web Developer</title>
		<meta name="description"
        content="Portfolio Natalia Curria, desarrolladora front-end especializada en HTML, CSS, JavaScript.">
		<meta name="keywords"
			content="portfolio, desarrollo web, front-end, HTML, CSS, JavaScript, maquetadora, Curia Natalia">
		<meta name="author" content="Natalia Curia">
		<meta name="robots" content="index, follow">
		<meta property="og:title" content="Portfolio Natalia Curia - Front-End Developer">
		<meta property="og:description" content="Portfolio Natalia Curia como desarrolladora front-end.">
		<meta property="og:image" content="ruta/a/imagen.jpg"> <!-- Imagen que se mostrarÃ¡ en las redes -->
		<meta property="og:url" content="https://tu-portfolio.com">
		<meta property="og:type" content="website">

		<link rel="preconnect" href="https://fonts.googleapis.com">
		<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
		<link href="https://fonts.googleapis.com/css2?family=Rajdhani:wght@300;400;500;600;700&display=swap" rel="stylesheet">
		<link href="https://fonts.googleapis.com/css2?family=Roboto+Condensed:ital,wght@0,100..900;1,100..900&display=swap" rel="stylesheet">
		<link href="https://fonts.googleapis.com/css2?family=Squada+One&display=swap" rel="stylesheet">


		<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
		<script src="https://kit.fontawesome.com/270cc5acdb.js" crossorigin="anonymous"></script>
	</head>
	<body>
		<CursorLayaut>
			<div class="pages">
				<div class="page">
					<a href="#home">Home</a>
					<a href="#experience">Experiencia</a>
					<a href="#projects">Proyectos</a>
				</div>
				<div class="scroll">
					<span class="thumb"></span>
				</div>
			</div>
			<Canvas></Canvas>
			<Nav></Nav>
			<main>
				<Home></Home>
				<Experience></Experience>
				<Projects></Projects>
				<div id="skills" class="container content">
					<div class="skills"> 
						<ul>
						{
							icons.icons.map((icon) => (
								icon.name !== 'GitHub' ? (
									<li set:html={icon.url}></li>
								) : null                 
							))
						}  
						</ul>               
					</div>
				</div>
				<div></div>
			</main>
			<footer></footer>
		</CursorLayaut>
	</body>
</html>

<style>


</style>

<script is:inline>

	//paralax
	document.addEventListener("scroll", function () {
		const parallax = document.querySelector("body");
		let scrollPosition = window.scrollY;
		parallax.style.backgroundPositionY = (scrollPosition * 0.3) + "px";
	});

	//pages navigation
	document.querySelectorAll('.page a').forEach(link => {
	 link.addEventListener('click', function(event) {
		 const target = document.querySelector(this.getAttribute('href'));
		 if (target) {
			 const scroll = document.querySelector('.scroll');
			 const thumb = document.querySelector('.thumb');
			 const isMobile = window.matchMedia("(max-width: 600px)").matches;
			 const scrollSize = isMobile ? scroll.offsetWidth : scroll.offsetHeight;
			 const index = Array.from(this.parentElement.children).indexOf(this);
			 const thumbSize = isMobile ? thumb.offsetWidth : thumb.offsetHeight;
			 const position = (scrollSize - thumbSize) * index / (this.parentElement.children.length - 1);
 
			 if (isMobile) {
				 thumb.style.left = `${position}px`; 
			 } else {
				 thumb.style.top = `${position}px`; 
			 }
 
			 window.scrollTo({
				 top: target.offsetTop,
				 behavior: 'smooth'
			 });
		 }
	 });
 });
 
 const sections = document.querySelectorAll('.content');
 const options = {
	 root: null,
	 rootMargin: '0px',
	 threshold: 0.5
 };
 
 const observer = new IntersectionObserver((entries) => {
	 entries.forEach(entry => {
		 if (entry.isIntersecting) {
			 const id = entry.target.id;
			 const link = document.querySelector(`.page a[href="#${id}"]`);
			 const scroll = document.querySelector('.scroll');
			 const thumb = document.querySelector('.thumb');
			 const isMobile = window.matchMedia("(max-width: 600px)").matches;
			 const scrollSize = isMobile ? scroll.offsetWidth : scroll.offsetHeight;
			 const index = Array.from(link.parentElement.children).indexOf(link);
			 const thumbSize = isMobile ? thumb.offsetWidth : thumb.offsetHeight;
			 const position = (scrollSize - thumbSize) * index / (link.parentElement.children.length - 1);

			 if (isMobile) {
				 thumb.style.left = `${position}px`;
			 } else {
				 thumb.style.top = `${position}px`;
			 }
		 }
	 });
 }, options);
 
 sections.forEach(section => {
	 observer.observe(section);
 });


 //________________________________________________


 

 </script>




