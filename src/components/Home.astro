---
import icons from '../../src/data/icons.json';
const items = Array(6).fill(null); // Generamos una lista de 6 elementos vac√≠os
---

<section id="home" class="container content">            
    <div class="presentation">
        <span>
            <h1> Natalia Giselle Curia</h1>
            <h2 class="animated-text">
                <span id="typed-text"></span>
                <span class="cursor animated-text">|</span>
            </h2>  
        </span>
        <span class="social">
            <a href="https://github.com/NataliaGiselleCuria" class="button draw-border">
                <svg xmlns="http://www.w3.org/2000/svg" fill="currentColor" class="bi bi-github"
                    viewBox="0 0 16 16">
                    <path
                        d="M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27s1.36.09 2 .27c1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.01 8.01 0 0 0 16 8c0-4.42-3.58-8-8-8" />
                </svg>
                GitHub
            </a>
            <a href="https://www.linkedin.com/in/curianatalia/"  class="button draw-border">
                <svg xmlns="http://www.w3.org/2000/svg" fill="currentColor" class="bi bi-linkedin"
                    viewBox="0 0 16 16">
                    <path
                        d="M0 1.146C0 .513.526 0 1.175 0h13.65C15.474 0 16 .513 16 1.146v13.708c0 .633-.526 1.146-1.175 1.146H1.175C.526 16 0 15.487 0 14.854zm4.943 12.248V6.169H2.542v7.225zm-1.2-8.212c.837 0 1.358-.554 1.358-1.248-.015-.709-.52-1.248-1.342-1.248S2.4 3.226 2.4 3.934c0 .694.521 1.248 1.327 1.248zm4.908 8.212V9.359c0-.216.016-.432.08-.586.173-.431.568-.878 1.232-.878.869 0 1.216.662 1.216 1.634v3.865h2.401V9.25c0-2.22-1.184-3.252-2.764-3.252-1.274 0-1.845.7-2.165 1.193v.025h-.016l.016-.025V6.169h-2.4c.03.678 0 7.225 0 7.225z" />
                </svg>
                Linkedin
            </a>
        </span>
    </div> 
</section>  

<style>
#home{
    position: relative;
    display: flex;
    flex-direction: column;
    justify-content: space-around;
    padding-top: 60px;
    height: 100vh;
    min-height: fit-content;
    align-content: center;
}

#home .row{
    align-items: center;
    height: fit-content;
}

.presentation {
    display: flex;
    flex-direction: column;
    justify-content: space-around;
    gap: 50px;
}

.social {
    height: 45px;
    display: flex;
    gap: 30px;
}

.social svg{
    color: #d5d5d5;
    height: 100%;
    transition: color 0.5s ease-in-out;
}

.social a{
    position: relative;
    display: inline-block;
    text-decoration: none;
   display: flex;
   gap: 6px;
}

.social a p{
    font-size: large;
    margin: 0;
}

.button {
  background: none;
  padding: 10px;
  
}

h1{
    font-family: "Rajdhani", sans-serif;
    color: #ceb9e9;
    font-size: clamp(0.1rem, 1vw + 1rem,3.5rem);
    font-weight: 400;
    line-height: 100%;
    filter: drop-shadow(-2px 2px 5px var(--back));
}

h2{
    font-family: 'Soapstone';
    font-size: clamp(0.1rem, 5vw + 1rem, 6rem);
    filter: drop-shadow(-2px 2px 5px var(--back));
    display: inline-flex;
    padding: 20px;
    border: 1px solid var(--alt);
    margin: 0;
    box-shadow: -2px 2px 5px var(--back) ;
}

#typed-text {
    width: max-content;
}

.cursor {
    animation: blink 1s step-end infinite;
}

@keyframes blink {
    50% {
        opacity: 0;
    }
}

p{
    color: white;
}

.banner{
    width: 100vw;
  position: absolute;
  left: -50vw; 
  margin-left: 30vw; 
  background-color: var(--focus);
  height: 30px;
  bottom: 0;
}

.track {
  position: absolute;
  white-space: nowrap;
  will-change: transform;
  animation: marquee 32s linear infinite;
}

@keyframes marquee {
  from { transform: translateX(0); }
  to { transform: translateX(-50%); }
}


</style>



<script is:inline>

    const text = "Web Developer";
    let index = 0;
    const speed = 200; 

    function typeEffect() {
        if (index < text.length) {
            document.getElementById("typed-text").textContent += text.charAt(index);
            index++;
            setTimeout(typeEffect, speed);
        }
    }

    window.onload = function() {
        typeEffect();
    };
</script>