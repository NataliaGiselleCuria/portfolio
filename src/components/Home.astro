---
import icons from '../../src/data/icons.json';
const items = Array(6).fill(null); // Generamos una lista de 6 elementos vac√≠os
---

<section id="home" class="container content">            
    <div class="presentation">
        <span class="title">
            <div class="flex-container">
                <div class="mask">
                  <h1 class="reveal-to-left full-width">
                    <span>Natalia</span> <span>Giselle</span> <span>Curia</span>
                  </h1>
                </div>
                <div class="border-left"></div>
                <div class="mask">
                  <h2 class="animated-text reveal-to-right full-width">
                    <span class="word">web</span>
                    <span class="word">developer</span> 
                </h2>
                </div>
              </div>  
        </span>
        <span class="social">
            <a href="https://github.com/NataliaGiselleCuria" class="button draw-border">
                <svg xmlns="http://www.w3.org/2000/svg" fill="currentColor" class="bi bi-github"
                    viewBox="0 0 16 16">
                    <path
                        d="M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27s1.36.09 2 .27c1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.01 8.01 0 0 0 16 8c0-4.42-3.58-8-8-8" />
                </svg>
                GitHub
            </a>
            <a href="https://www.linkedin.com/in/curianatalia/"  class="button draw-border">
                <svg xmlns="http://www.w3.org/2000/svg" fill="currentColor" class="bi bi-linkedin"
                    viewBox="0 0 16 16">
                    <path
                        d="M0 1.146C0 .513.526 0 1.175 0h13.65C15.474 0 16 .513 16 1.146v13.708c0 .633-.526 1.146-1.175 1.146H1.175C.526 16 0 15.487 0 14.854zm4.943 12.248V6.169H2.542v7.225zm-1.2-8.212c.837 0 1.358-.554 1.358-1.248-.015-.709-.52-1.248-1.342-1.248S2.4 3.226 2.4 3.934c0 .694.521 1.248 1.327 1.248zm4.908 8.212V9.359c0-.216.016-.432.08-.586.173-.431.568-.878 1.232-.878.869 0 1.216.662 1.216 1.634v3.865h2.401V9.25c0-2.22-1.184-3.252-2.764-3.252-1.274 0-1.845.7-2.165 1.193v.025h-.016l.016-.025V6.169h-2.4c.03.678 0 7.225 0 7.225z" />
                </svg>
                Linkedin
            </a>
            <span class="cv"><a href="./CV-CuriaNatalia.pdf" download="CV-CuriaNatalia.pdf">Descargar CV</a></span>
        </span>
    </div> 
</section>  

<style>

#home{
    position: relative;
    display: flex;
    flex-direction: column;
    justify-content: space-around;
    height: 100vh;
    min-height: fit-content;
    align-content: center;
}

#home .row{
    align-items: center;
    height: fit-content;
}

.presentation {
    display: flex;
    flex-direction: column;
    justify-content: space-around;
    gap: 10px;
}

.title{
    display: flex;
    flex-direction: row;
    height: max-content;
    min-height: fit-content;
}

.flex-container {
  display: flex;
  flex-wrap: nowrap;
  justify-content: center;
  align-items: center;
  align-content: center;
  gap: 10px;
}

.mask {
  overflow: hidden;
  display: flex;
  height: 100%;
}

h1 {
    font-family: "Rajdhani", sans-serif;
    color: #ceb9e9;
    font-size: clamp(0.1rem, 2.5vw + 1rem, 4.5rem);
    font-weight: 400;
    line-height: 100%;
    display: flex;
    flex-direction: column;
    align-items: flex-end;
    justify-content: center;
    align-self: center;
    height: 80%; 
}

h2{
    font-family: 'Soapstone';
    font-size: clamp(2.1rem, 7vw + 1rem, 7rem);
    padding: 20px 0;
    margin: 0;
}

.reveal-to-right {
  transform: translateX(-100%);
  animation: reveal-to-right 1.2s 1.8s forwards;
}

@keyframes reveal-to-right {
  from {
    transform: translateX(-100%);
  }
  to {
    transform: translateX(0);
  }
}

.reveal-to-left {
  transform: translateX(100%);
  animation: reveal-to-left 1s 1s forwards;
}

@keyframes reveal-to-left {
  from {
    transform: translateX(100%);
  }
  to {
    transform: translateX(0);
  }
}

.border-left {
  height: 90%;
  border-left: 4px solid var(--focus);
  animation: grow 5s forwards;
}

@keyframes grow {
  0% {
    height: 0;
  }
  20%, 90% {
    height: 90%;
    opacity: 1;
  }
  100% {
    height: 90%;
  }
}

.word{
    display: block;
}



#typed-text {
    width: max-content;
}

.cursor {
    animation: blink 1s step-end infinite;
    opacity: 0;
}

@keyframes blink {
    50% {
        opacity: 0;
    }
}

.social {
    height: 45px;
    display: flex;
    align-items: center;
    gap: 10px;
    position: absolute;
    bottom: 50px;
    right: 0;
    
}

.social svg{
    color: #ceb9e9;
    height: 100%;
    width: 25px;
    transition: color 0.5s ease-in-out;
}

.social a{
    font-family: "Rajdhani", sans-serif;
    font-weight: 400;
    font-size: 20px;
    color: #ceb9e9;
    position: relative;
    display: inline-block;
    text-decoration: none;
    display: flex;
    gap: 6px;
    align-items: center;
}

.button {
  background: none;
  padding: 10px;
  
}

.cv {
    font-family: "Rajdhani", sans-serif;
    font-weight: 400;
    font-size: 20px;
    text-align: center;
    background-color: var(--focus);
    border-radius: 5px;
    padding: 10px;
    display: flex;
    align-items: center;
    position: relative;
    transition: all 0.5s ease-in-out;
}
   

.cv a{
    color: white;
}

.cv:hover{
    background-color: var(--alt);
}

</style>

<script is:inline>
    // const words = ["Web", "Developer"];
    // let wordIndex = 0;
    // let letterIndex = 0;
    // const speed = 150;

    // function typeEffect() {
    //     const element = document.getElementById("typed-text");
        
    //     if (letterIndex < words[wordIndex].length) {
    //         element.innerHTML += words[wordIndex].charAt(letterIndex);
    //         letterIndex++;
    //         setTimeout(typeEffect, speed);
    //     } else {
    //         letterIndex = 0;
    //         wordIndex++;
    //         if (wordIndex < words.length) {
    //             element.innerHTML += "<span class='line-break'><br></span>";
    //             setTimeout(typeEffect, speed);
    //         }
    //     }
    // }

    // window.onload = function() {
    //     const title = document.querySelector(".reveal-text");
        
    //     title.addEventListener("animationend", function(event) {
    //         if (event.animationName === "text-revealer") {
    //             setTimeout(() => {
    //                 document.querySelector(".cursor").style.opacity = 1;
    //                 document.querySelector("h2").style.opacity = 1;
    //                 typeEffect();
    //             }, 300); // 3000 ms = 3 seconds delay
    //         }
    //     });
    // };
</script>